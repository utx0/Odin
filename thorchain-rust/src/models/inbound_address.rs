/*
 * Thornode API
 *
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.119.0
 * Contact: devs@thorchain.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InboundAddress {
    #[serde(rename = "chain", skip_serializing_if = "Option::is_none")]
    pub chain: Option<String>,
    #[serde(rename = "pub_key", skip_serializing_if = "Option::is_none")]
    pub pub_key: Option<String>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "router", skip_serializing_if = "Option::is_none")]
    pub router: Option<String>,
    /// Returns true if trading is unavailable for this chain, either because trading is halted globally or specifically for this chain
    #[serde(rename = "halted")]
    pub halted: bool,
    /// Returns true if trading is paused globally
    #[serde(rename = "global_trading_paused", skip_serializing_if = "Option::is_none")]
    pub global_trading_paused: Option<bool>,
    /// Returns true if trading is paused for this chain
    #[serde(rename = "chain_trading_paused", skip_serializing_if = "Option::is_none")]
    pub chain_trading_paused: Option<bool>,
    /// Returns true if LP actions are paused for this chain
    #[serde(rename = "chain_lp_actions_paused", skip_serializing_if = "Option::is_none")]
    pub chain_lp_actions_paused: Option<bool>,
    /// The minimum fee rate used by vaults to send outbound TXs. The actual fee rate may be higher. For EVM chains this is returned in gwei (1e9).
    #[serde(rename = "gas_rate", skip_serializing_if = "Option::is_none")]
    pub gas_rate: Option<String>,
    /// Units of the gas_rate.
    #[serde(rename = "gas_rate_units", skip_serializing_if = "Option::is_none")]
    pub gas_rate_units: Option<String>,
    /// Avg size of outbound TXs on each chain. For UTXO chains it may be larger than average, as it takes into account vault consolidation txs, which can have many vouts
    #[serde(rename = "outbound_tx_size", skip_serializing_if = "Option::is_none")]
    pub outbound_tx_size: Option<String>,
    /// The total outbound fee charged to the user for outbound txs in the gas asset of the chain.
    #[serde(rename = "outbound_fee", skip_serializing_if = "Option::is_none")]
    pub outbound_fee: Option<String>,
    /// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
    #[serde(rename = "dust_threshold", skip_serializing_if = "Option::is_none")]
    pub dust_threshold: Option<String>,
}

impl InboundAddress {
    pub fn new(halted: bool) -> InboundAddress {
        InboundAddress {
            chain: None,
            pub_key: None,
            address: None,
            router: None,
            halted,
            global_trading_paused: None,
            chain_trading_paused: None,
            chain_lp_actions_paused: None,
            gas_rate: None,
            gas_rate_units: None,
            outbound_tx_size: None,
            outbound_fee: None,
            dust_threshold: None,
        }
    }
}


