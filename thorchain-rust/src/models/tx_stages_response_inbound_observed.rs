/*
 * Thornode API
 *
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.119.0
 * Contact: devs@thorchain.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TxStagesResponseInboundObserved {
    /// returns true if any nodes have observed the transaction (to be deprecated in favour of counts)
    #[serde(rename = "started", skip_serializing_if = "Option::is_none")]
    pub started: Option<bool>,
    /// number of signers for pre-confirmation-counting observations
    #[serde(rename = "pre_confirmation_count", skip_serializing_if = "Option::is_none")]
    pub pre_confirmation_count: Option<i32>,
    /// number of signers for final observations, after any confirmation counting complete
    #[serde(rename = "final_count", skip_serializing_if = "Option::is_none")]
    pub final_count: Option<i32>,
    /// returns true if no transaction observation remains to be done
    #[serde(rename = "completed")]
    pub completed: bool,
}

impl TxStagesResponseInboundObserved {
    pub fn new(completed: bool) -> TxStagesResponseInboundObserved {
        TxStagesResponseInboundObserved {
            started: None,
            pre_confirmation_count: None,
            final_count: None,
            completed,
        }
    }
}


