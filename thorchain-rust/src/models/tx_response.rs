/*
 * Thornode API
 *
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.119.0
 * Contact: devs@thorchain.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TxResponse {
    #[serde(rename = "observed_tx", skip_serializing_if = "Option::is_none")]
    pub observed_tx: Option<Box<crate::models::ObservedTx>>,
    /// the thorchain height at which the inbound reached consensus
    #[serde(rename = "consensus_height", skip_serializing_if = "Option::is_none")]
    pub consensus_height: Option<i64>,
    /// the thorchain height at which the outbound was finalised
    #[serde(rename = "finalised_height", skip_serializing_if = "Option::is_none")]
    pub finalised_height: Option<i64>,
    /// the thorchain height for which the outbound was scheduled
    #[serde(rename = "outbound_height", skip_serializing_if = "Option::is_none")]
    pub outbound_height: Option<i64>,
    #[serde(rename = "keysign_metric", skip_serializing_if = "Option::is_none")]
    pub keysign_metric: Option<Box<crate::models::TssKeysignMetric>>,
}

impl TxResponse {
    pub fn new() -> TxResponse {
        TxResponse {
            observed_tx: None,
            consensus_height: None,
            finalised_height: None,
            outbound_height: None,
            keysign_metric: None,
        }
    }
}


