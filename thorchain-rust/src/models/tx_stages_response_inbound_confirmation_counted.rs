/*
 * Thornode API
 *
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.119.0
 * Contact: devs@thorchain.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TxStagesResponseInboundConfirmationCounted {
    /// the THORChain block height when confirmation counting began
    #[serde(rename = "counting_start_height", skip_serializing_if = "Option::is_none")]
    pub counting_start_height: Option<i64>,
    /// the external source chain for which confirmation counting takes place
    #[serde(rename = "chain", skip_serializing_if = "Option::is_none")]
    pub chain: Option<String>,
    /// the block height on the external source chain when the transaction was observed
    #[serde(rename = "external_observed_height", skip_serializing_if = "Option::is_none")]
    pub external_observed_height: Option<i64>,
    /// the block height on the external source chain when confirmation counting will be complete
    #[serde(rename = "external_confirmation_delay_height", skip_serializing_if = "Option::is_none")]
    pub external_confirmation_delay_height: Option<i64>,
    /// the estimated remaining seconds before confirmation counting completes
    #[serde(rename = "remaining_confirmation_seconds", skip_serializing_if = "Option::is_none")]
    pub remaining_confirmation_seconds: Option<i64>,
    /// returns true if no transaction confirmation counting remains to be done
    #[serde(rename = "completed")]
    pub completed: bool,
}

impl TxStagesResponseInboundConfirmationCounted {
    pub fn new(completed: bool) -> TxStagesResponseInboundConfirmationCounted {
        TxStagesResponseInboundConfirmationCounted {
            counting_start_height: None,
            chain: None,
            external_observed_height: None,
            external_confirmation_delay_height: None,
            remaining_confirmation_seconds: None,
            completed,
        }
    }
}


